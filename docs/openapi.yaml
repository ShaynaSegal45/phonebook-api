openapi: 3.0.3
info:
  title: Phonebook API
  description: API for managing contacts in a phonebook.
  version: 1.0.0
paths:
  /ping:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: Pong response
          content:
            text/plain:
              schema:
                type: string
                example: pong
  /contact:
    post:
      summary: Create a new contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
      responses:
        '201':
          description: Contact created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: a unique identifier
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /contacts:
    get:
      summary: Retrieve a list of contacts
      parameters:
        - name: fullText
          in: query
          description: Search text to filter contacts by firstname/lastname or phone
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Number of contacts to skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: Number of contacts to return
          required: false
          schema:
            type: integer
            format: int32
            default: 2
      responses:
        '200':
          description: List of contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  contacts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /contact/{id}:
    get:
      summary: Get a specific contact by ID
      parameters:
        - name: id
          in: path
          description: The ID of the contact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an existing contact
      parameters:
        - name: id
          in: path
          description: The ID of the contact
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          description: Contact updated successfully
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a contact
      parameters:
        - name: id
          in: path
          description: The ID of the contact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact deleted successfully
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    CreateContactRequest:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        phone:
          type: string
          example: 123-456-7890
        address:
          type: string
          example: 123 Main St, Anytown, USA
      required:
        - firstName
        - lastName
    UpdateContactRequest:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        phone:
          type: string
          example: 123-456-7890
        address:
          type: string
          example: 123 Main St, Anytown, USA
      required:
        - id
    Contact:
      type: object
      properties:
        id:
          type: string
          example: a unique identifier
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        phone:
          type: string
          example: 123-456-7890
        address:
          type: string
          example: 123 Main St, Anytown, USA
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid request
    Pagination:
      type: object
      properties:
        next:
          type: string
          example: /contacts?limit=10&offset=20
        prev:
          type: string
          example: /contacts?limit=10&offset=0
        count:
          type: integer
          example: 50
